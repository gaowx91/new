<template>
    <div class="wrapper">
        <v-Header>
            <div class="mod-header">
                <i class="mintui mintui-back" @click="$router.go(-1)"></i>
                <div class="title">
                    <div class="mod-searchbar">
                        <i class="mintui mintui-search"></i> 輸入搜尋關鍵字
                    </div>
                </div>
                <span class="is-right">
                <img src="static/images/common/menu.png" alt="">
                </span>
            </div>
            <ul class="g-currency">
                <li @click="popupVisible4 = true"><span class="w200">{{currencyCn}}<span class="text-muted">{{currencyEn}}</span></span>
                </li>
                <li @click="popupVisible5 = true"><span class="w200">{{goodsResult}}</span></li>
            </ul>
        </v-Header>
        <v-Content class="g-wrapper">
            <v-CellBox>
                <mt-loadmore :bottom-method="loadBottom" @bottom-status-change="handleBottomChange" :bottom-all-loaded="allLoaded" ref="loadmore" bottomLoadingText="正在努力加載..." :autoFill="false">
                    <div class="mod-goods-list" ref="wrapper">
                        <v-Cell :to="item.url" v-for="(item,index) in gameDetail" :key="index">
                            <div slot='left' class="cell-left">
                                <img v-lazy="item.img" class="my-avatar">
                            </div>
                            <div class="row hd">
                                <span class="badge badge-primary badge-min">{{item.type}}</span>
                                <span class="tit">{{item.tit}}</span>
                            </div>
                            <div class="row md">{{item.txt}}</div>
                            <div class="row bd">
                                <span class="text-default"><span class="text-danger money">{{item.money}}</span><span>RMB</span></span>
                                <span class="text-muted">紅利:{{item.bonus}}</span>
                            </div>
                        </v-Cell>
                    </div>
                </mt-loadmore>
            </v-CellBox>
        </v-Content>
        <mt-popup v-model="popupVisible4" position="bottom" class="mint-popup-4 popup-select">
            <div class="popup-bar">
                <mt-button type="primary" @click="currencyClosePopup">取消</mt-button>
                <mt-button type="danger" @click="currencyHandle">確認</mt-button>
            </div>
            <mt-picker :slots="currencySlots" ref="resetCurrencyValue" @change="currencyChange" :visible-item-count="3"></mt-picker>
        </mt-popup>
        <mt-popup v-model="popupVisible5" position="bottom" class="mint-popup-4 popup-select">
            <div class="popup-bar">
                <mt-button type="primary" @click="goodsTypeClosePopup">取消</mt-button>
                <mt-button type="danger" @click="goodsHandle">確認</mt-button>
            </div>
            <mt-picker :slots="goodsSlots" ref="resetGoodsTypeValue" @change="goodsTypeChange" :visible-item-count="3"></mt-picker>
        </mt-popup>
    </div>
</template>
<script>
import '#/css/goods/goods_list.css'
import vContent from '@/components/content'
import vCellBox from '@/components/box'
import vCell from '@/components/cell'
import vHeader from '@/components/header'
import axios from "axios"
var page = 6;
export default {
    data() {
        return {
            goodsSlots: [{
                flex: 1,
                values: ['所有物品', '道具', '點數卡', '代練', '商城道具', '送禮', '其他', '代儲', '產包'],
                className: 'slot1',
                value: '所有物品'
            }],
            currencySlots: [{
                flex: 1,
                values: ['台幣TWD', '人民幣RMB', '港幣HKD'],
                className: 'slot1',
                value: '台幣TWD',
            }],
            currencyCn: '台幣',
            currencyValue: '',
            currencyEn: 'TWD',
            goodsResult: '所有物品',
            goodsValue: '',
            popupVisible4: false,
            popupVisible5: false,
            allLoaded: false,
            bottomStatus: '',
            isLoading: false,
            gameDetail: [],
            allGameDetail: [],
        }
    },
    watch: {
        'gameDetail' (n) {
            this.gameDetail = n
        },
        'popupVisible4'(n){
            if(n){
                this.$refs.resetCurrencyValue.setSlotValue(0, this.currencyCn + this.currencyEn)
            }
        },
        'popupVisible5'(n){
            if(n){
                this.$refs.resetCurrencyValue.setSlotValue(0, this.goodsResult)
            }
        }
    },
    methods: {
        getlist() {
            var _this = this;
            axios.get(`static/api/goodslist.json`).then(function(res) {
                _this.allGameDetail = res.data.gameDetail;
                _this.gameDetail = _this.allGameDetail.slice(0, page);
            });
        },
        currencyHandle() {
            this.popupVisible4 = false;
            this.currencyCn = this.currencyValue.replace(/[a-zA-Z]/g, '');
            this.currencyEn = this.currencyValue.replace(/[\u4e00-\u9fa5]/gm, "");
        },
        goodsHandle() {
            this.popupVisible5 = false;
            this.goodsResult = this.goodsValue;
        },
        currencyChange(picker, values) {
            this.currencyValue = values[0];
        },
        goodsTypeChange(picker, values) {
            this.goodsValue = values[0];
        },
        currencyClosePopup() {
            this.popupVisible4 = false;
        },
        goodsTypeClosePopup() {
            this.popupVisible5 = false;
        },
        handleBottomChange(status) {
            this.bottomStatus = status;
        },
        loadBottom() {
            if (page >= 18) {
                this.allLoaded = true;
            } else {
                this.gameDetail = this.gameDetail.concat(this.allGameDetail.slice(page, page + 6));
            }
            page = page + 6;
            this.$refs.loadmore.onBottomLoaded();
        }
    },
    components: {
        vContent,
        vHeader,
        vCell,
        vCellBox
    },
    mounted() {
        this.overScroll();
    },
    created() {
        this.getlist();
    }
}

</script>
