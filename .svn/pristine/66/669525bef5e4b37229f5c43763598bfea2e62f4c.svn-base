<template>
    <div class="input-group" :class="{selected,'iserror':required}">
        <div class="input-group-main">
            <div class="input-group-wrapper">
                <v-Panel v-if="toggle" :tit="toggletit" :txt="toggletxt">
                    <div class="line" ></div>
                    <div class="input-group-inner" >
                        <div class="input-group-addon">
                            <i :class="'first icon icon-'+icon"></i>
                        </div>
                        <div class="input-group-value">
                            <v-Input :types="type" v-model="acountValue" :typeToggle="eyesToggle" require :placeholder="placeholder" ref="typeChange" @handleToggleFocus="handleToggleFocus" @handleToggleBlur="handleToggleBlur" :disabled="disabled" :readonly="readonly" :maxlength="maxlength" :minlength="minlength" :autofocus="autofocus" :focusValue="focusChange=='1'?true:false"></v-Input>
                            <i class="last icon icon-warning-circle-sign" v-if="state"></i>
                            <i :class="'last icon icon-eyes-'+checkIcon" v-model="eyesToggle" @click="SeePassword" v-if="type === 'password'"></i>
                        </div>
                    </div>
                </v-Panel>
                <div class="input-group-inner"  v-else>
                    <div class="input-group-addon">
                        <i :class="'first icon icon-'+icon"></i>
                    </div>
                    <div class="input-group-value">
                        <v-Input :types="type" v-model="acountValue" :typeToggle="eyesToggle" require :placeholder="placeholder" ref="typeChange" @handleToggleFocus="handleToggleFocus" @handleToggleBlur="handleToggleBlur" :disabled="disabled" :readonly="readonly" :maxlength="maxlength" :minlength="minlength" :autofocus="autofocus" :focusValue="focusChange=='1'?true:false"></v-Input>
                        <i class="last icon icon-warning-circle-sign" v-if="state"></i>
                        <i :class="'last icon icon-eyes-'+checkIcon" v-model="eyesToggle" @click="SeePassword" v-if="type === 'password'"></i>
                    </div>
                </div>
            </div>
            <div  v-if="other" class="input-group-other">
                <slot></slot>
            </div>
        </div>
        <div class="input-group-prompt" v-if="message.length">
            {{message}}
        </div>
    </div>
</template>
<script>
import vPanel from '../../panel'
import vInput from '../../input'
require("#/css/components/inputgroup.css")
export default {
    name: 'inputgroup',
    props: {
        other: Boolean,
        message: {
            type: String,
            default: ''
        },
        type: {
            type: String,
            default: 'text'
        },
        icon: String,
        // no: String,
        state: false,
        // info: true,
        // prompt: false,

        placeholder: String,
        // id: String,

        acountValue: {},
        required: false,
        disabled: Boolean,
        readonly: Boolean,
        maxlength: Number,
        minlength: Number,
        autoCompletes: {
            type: String,
            default: 'off'
        },
        autofocus: Boolean,

        toggle: Boolean,
        // toggle: true,
        toggletit: {
            type: String,
            default: '設定支付密碼'
        },
        toggletxt: {
            type: String,
            default: '（默認支付密碼為登入密碼）'
        }
    },
    data() {
        return {
            selected: '',
            iserror: '',
            toggleInfo: true,
            checkIcon: 'closed',
            eyesToggle: false,
            focusChange: '',
            value:'',
        }
    },
    computed: {

    },
    methods: {
        SeePassword(event) {
            var _this = this;
            (_this.eyesToggle = !_this.eyesToggle) ? (_this.focusChange=1,_this.checkIcon = "look") : (_this.checkIcon = "closed");
        },
        handleFocus() {
            this.commonFocus();
        },
        handleBlur(event) {
            this.commonBlur();
        },
        commonFocus() {
            var _this = this;
            _this.selected = 'selected';
            _this.iserror = '';
        },
        commonBlur() {
            var _this = this;
            _this.selected = '';
            _this.value = event.currentTarget.value;
            _this.$emit('input', _this.value);
            _this.$emit('change', _this.value);
            _this.$nextTick(function(){
                this.acountValue=this.$refs.typeChange.value
            })
        },
        handleToggleFocus(event) {
            this.commonFocus();
        },
        handleToggleBlur(event) {
            this.commonBlur();
        }
    },
    components: {
        vPanel,
        vInput
    }
}

</script>
